//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TASON.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace TASON.Grammar {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="TASONParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ITASONListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TASONParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] TASONParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TASONParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] TASONParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ObjectValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectValue([NotNull] TASONParser.ObjectValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ObjectValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectValue([NotNull] TASONParser.ObjectValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrayValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayValue([NotNull] TASONParser.ArrayValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrayValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayValue([NotNull] TASONParser.ArrayValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StringValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringValue([NotNull] TASONParser.StringValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringValue([NotNull] TASONParser.StringValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberValue([NotNull] TASONParser.NumberValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberValue([NotNull] TASONParser.NumberValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BooleanValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanValue([NotNull] TASONParser.BooleanValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BooleanValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanValue([NotNull] TASONParser.BooleanValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NullValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullValue([NotNull] TASONParser.NullValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NullValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullValue([NotNull] TASONParser.NullValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeInstanceValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeInstanceValue([NotNull] TASONParser.TypeInstanceValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeInstanceValue</c>
	/// labeled alternative in <see cref="TASONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeInstanceValue([NotNull] TASONParser.TypeInstanceValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TASONParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean([NotNull] TASONParser.BooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TASONParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean([NotNull] TASONParser.BooleanContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ScalarTypeInstance</c>
	/// labeled alternative in <see cref="TASONParser.typeInstance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalarTypeInstance([NotNull] TASONParser.ScalarTypeInstanceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ScalarTypeInstance</c>
	/// labeled alternative in <see cref="TASONParser.typeInstance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalarTypeInstance([NotNull] TASONParser.ScalarTypeInstanceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ObjectTypeInstance</c>
	/// labeled alternative in <see cref="TASONParser.typeInstance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectTypeInstance([NotNull] TASONParser.ObjectTypeInstanceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ObjectTypeInstance</c>
	/// labeled alternative in <see cref="TASONParser.typeInstance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectTypeInstance([NotNull] TASONParser.ObjectTypeInstanceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TASONParser.object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject([NotNull] TASONParser.ObjectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TASONParser.object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject([NotNull] TASONParser.ObjectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TASONParser.pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPair([NotNull] TASONParser.PairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TASONParser.pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPair([NotNull] TASONParser.PairContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StringKey</c>
	/// labeled alternative in <see cref="TASONParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringKey([NotNull] TASONParser.StringKeyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringKey</c>
	/// labeled alternative in <see cref="TASONParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringKey([NotNull] TASONParser.StringKeyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="TASONParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] TASONParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="TASONParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] TASONParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TASONParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] TASONParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TASONParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] TASONParser.ArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TASONParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] TASONParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TASONParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] TASONParser.NumberContext context);
}
} // namespace TASON.Grammar
